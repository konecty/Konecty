name: konecty-full
services:
    mongodb:
        image: mongo:6
        container_name: mongodb
        restart: always
        volumes:
            - ${PWD}/.dev-data/mongodb:/data
        env_file:
            - .env
        ports:
            - '${MONGO_PORT:-27017}:27017'
        command: ['mongod', '--bind_ip_all', '--replSet', 'rs0', '--dbpath', '/data']

    mongodb-init:
        image: mongo:6
        container_name: mongodb-init
        depends_on:
            - mongodb
        command:
            - /bin/bash
            - -c
            - |
                echo 'Waiting 10 seconds before checking replica set status';
                sleep 10;
                echo 'Checking replica set status';
                if ! mongosh --host mongodb --eval 'rs.status()' | grep "set: 'rs0'"; then
                    echo 'Initiating replica set';
                    mongosh --host mongodb --eval 'rs.initiate({_id : "rs0", members: [ { _id: 0, host: "mongodb:27017" } ] })';
                else
                    echo 'Replica set already initialized';
                fi

    cloudflared:
        image: cloudflare/cloudflared:latest
        container_name: cloudflared
        command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}

    konecty:
        container_name: konecty
        image: konecty/konecty:3.0.0
        ports:
            - '${PORT:-3000}:${PORT:-3000}'
        env_file:
            - .env
        environment:
            - MONGO_URL=mongodb://mongodb:27017/${KONMETA_NAMESPACE}?directConnection=true
        depends_on:
            mongodb-init:
                condition: service_completed_successfully
            rabbitmq:
                condition: service_healthy
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:${PORT:-3000}/liveness']
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    rabbitmq:
        image: rabbitmq:4.0-management
        container_name: rabbitmq
        hostname: konecty-rabbitmq
        ports:
            - '5672:5672' # AMQP protocol
            - '15672:15672' # Management interface
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-admin}
        volumes:
            - ${PWD}/.dev-data/rabbitmq:/var/lib/rabbitmq
        healthcheck:
            test: ['CMD', 'rabbitmq-diagnostics', 'check_port_connectivity']
            interval: 6s
            timeout: 5s
            retries: 3
            start_period: 5s
        restart: always
